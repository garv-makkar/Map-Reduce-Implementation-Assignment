# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import mapreduce_pb2 as mapreduce__pb2


class KMeansMapReduceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MapTask = channel.unary_unary(
                '/KMeansMapReduce/MapTask',
                request_serializer=mapreduce__pb2.MapTaskRequest.SerializeToString,
                response_deserializer=mapreduce__pb2.MapResponse.FromString,
                )
        self.ReduceTask = channel.unary_unary(
                '/KMeansMapReduce/ReduceTask',
                request_serializer=mapreduce__pb2.ReduceTaskRequest.SerializeToString,
                response_deserializer=mapreduce__pb2.ReduceTaskResponse.FromString,
                )
        self.ReceiveKeyValues = channel.unary_unary(
                '/KMeansMapReduce/ReceiveKeyValues',
                request_serializer=mapreduce__pb2.ReceiveKeyValuesRequest.SerializeToString,
                response_deserializer=mapreduce__pb2.ReceiveKeyValuesResponse.FromString,
                )


class KMeansMapReduceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def MapTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReduceTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveKeyValues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KMeansMapReduceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MapTask': grpc.unary_unary_rpc_method_handler(
                    servicer.MapTask,
                    request_deserializer=mapreduce__pb2.MapTaskRequest.FromString,
                    response_serializer=mapreduce__pb2.MapResponse.SerializeToString,
            ),
            'ReduceTask': grpc.unary_unary_rpc_method_handler(
                    servicer.ReduceTask,
                    request_deserializer=mapreduce__pb2.ReduceTaskRequest.FromString,
                    response_serializer=mapreduce__pb2.ReduceTaskResponse.SerializeToString,
            ),
            'ReceiveKeyValues': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveKeyValues,
                    request_deserializer=mapreduce__pb2.ReceiveKeyValuesRequest.FromString,
                    response_serializer=mapreduce__pb2.ReceiveKeyValuesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'KMeansMapReduce', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KMeansMapReduce(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def MapTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/KMeansMapReduce/MapTask',
            mapreduce__pb2.MapTaskRequest.SerializeToString,
            mapreduce__pb2.MapResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReduceTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/KMeansMapReduce/ReduceTask',
            mapreduce__pb2.ReduceTaskRequest.SerializeToString,
            mapreduce__pb2.ReduceTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReceiveKeyValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/KMeansMapReduce/ReceiveKeyValues',
            mapreduce__pb2.ReceiveKeyValuesRequest.SerializeToString,
            mapreduce__pb2.ReceiveKeyValuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
